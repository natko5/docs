-
  name: Aux chain
  required_empty: true
  expr: _ <aux (_ <aux _)
  desc: Auxiliary dependencies should not form a chain.
  pos_ex: "Do you think that he will have left when we come ?\naux(think, Do)\naux(left, will)\naux(left, have)"
  neg_ex: "Do you think that he will have left when we come ?\naux(think, Do)\naux(have, will)\naux(left, have)"
  link: http://universaldependencies.org/u/dep/aux_.html

-
  name: Name is right-headed
  required_empty: true
  expr: _ <name@R _
  desc: Name dependencies should be left-headed, not right.
  pos_ex: "Carl XVI Gustaf\nname(Carl, XVI)\nname(Carl, Gustaf)"
  neg_ex: "Carl XVI Gustaf\nname(Gustaf, XVI)\nname(Gustaf, Carl)"
  link: http://universaldependencies.org/u/dep/name.html

-
  name: MWE is right-headed
  required_empty: true
  expr: _ <mwe@R _
  desc: Multi-word expressions should be left-headed, not right.
  pos_ex: "He cried because of you\nmwe(because, of)"
  neg_ex: "He cried because of you\nmwe(of, because)"
  link: http://universaldependencies.org/u/dep/mwe.html

-
  name: MWE chain
  required_empty: true
  expr: "_ <mwe (_ <mwe _)"
  desc: MWE dependencies should not be chained. All dependents should be attached directly to the first one.
  link: http://universaldependencies.org/u/dep/mwe.html

-
  name: Foreign is right-headed
  required_empty: true
  expr: _ <foreign@R _
  desc: Foreign dependencies should be left-headed, not right.
  link: http://universaldependencies.org/u/dep/foreign.html

-
  name: Foreign chain
  required_empty: true
  expr: "_ <foreign (_ <foreign _)"
  desc: Foreign dependencies should not be chained. All dependents should be attached directly to the first one. If we wish to annotate real syntactic structure of foreign material, we must not use the foreign relation.
  link: http://universaldependencies.org/u/dep/foreign.html

-
  name: Conj is right-headed
  required_empty: true
  expr: _ <conj@R _
  pos_ex: "Bill is big and honest\nconj(big, honest)"
  neg_ex: "Bill is big and honest\nconj(honest, big)"
  desc: Conjugation dependencies should be left-headed, not right.
  link: http://universaldependencies.org/u/dep/conj.html

-
  name: Appos is right-headed
  required_empty: true
  expr: _ <appos@R _
  pos_ex: "Sam , my brother , arrived\nappos(Sam, brother)"
  neg_ex: "Sam , my brother , arrived\nappos(brother, Sam)"
  desc: Apposition dependencies should be left-headed, not right.
  link: http://universaldependencies.org/u/dep/appos.html

-
  name: Non-passive subject with passive auxiliary
  required_empty: true
  expr: "_ >nsubj|>csubj _ >auxpass|>auxpass:refl _"
  desc: A passive auxiliary implies that the subject is passive, too.
  pos_ex: "The reconstruction was finished yesterday .\nnsubjpass(finished, reconstruction)\nauxpass(finished, was)"
  neg_ex: "The reconstruction was finished yesterday .\nnsubj(finished, reconstruction)\nauxpass(finished, was)"
  link: http://universaldependencies.org/docs/u/dep/nsubjpass.html

-
  name: Copula is not VERB
  required_empty: true
  expr: (!VERB) <cop _
  expr-pos: _ <cop _
  desc: Copulas should always be main verbs. Not auxiliaries, not punctuation (dashes) and definitely not nominals.
  link: http://universaldependencies.org/docs/u/dep/cop.html

-
  name: PRON is mark
  required_empty: true
  expr: PRON <mark _
  desc: Pronouns must not be attached using the mark relation. Relative pronouns must not be confused with subordinating conjunctions, even if the word is ambiguous.
  pos_ex: "This is a fact that we cannot ignore . You know that we cannot ignore it .\ndobj(ignore-8, that-5)\nmark(ignore-15, that-12)"
  neg_ex: "This is a fact that we cannot ignore .\nmark(ignore-8, that-5)"
  link: http://universaldependencies.org/docs/u/dep/mark.html

-
  name: Relation punct is used for node that is not PUNCT
  required_empty: true
  expr: "!PUNCT <punct _"
  desc: Only nodes tagged PUNCT can be attached using the punct relation.
  link: http://universaldependencies.org/u/dep/punct.html

-
  name: PUNCT is attached as neither punct nor root
  required_empty: true
  expr: "PUNCT (<!punct&<!root) _"
  desc: Nodes tagged PUNCT can only be attached using the punct relation (and exceptionally, if it is the only node in the sentence, also root).
  link: http://universaldependencies.org/u/dep/punct.html

-
  name: PRON or DET lacks the PronType feature
  expr: "(PRON|DET)&!PronType"
  desc: All pronouns and determiners should be further categorized using the PronType feature. Other POS may or may not have this feature.
  link: http://universaldependencies.org/docs/u/feat/PronType.html

-
  name: NUM lacks the NumType feature
  expr: "NUM&!NumType"
  desc: All numerals should be further categorized using the NumType feature. Other POS may or may not have this feature.
  link: http://universaldependencies.org/docs/u/feat/NumType.html

-
  name: VERB or AUX lacks the VerbForm feature
  expr: "(VERB|AUX)&!VerbForm"
  desc: All verbs should be further categorized using the VerbForm feature. Other POS may or may not have this feature.
  link: http://universaldependencies.org/docs/u/feat/VerbForm.html

-
  name: Finite verb is not a verb
  required_empty: true
  expr: "(VerbForm=Fin)&!(VERB|AUX)"
  desc: Only non-finite VerbForms are expected to appear with non-verb parts of speech (NOUN, ADJ, ADV).
  link: http://universaldependencies.org/docs/u/feat/VerbForm.html

-
  name: Finite verb lacks the Mood feature
  required_empty: true
  expr: "(VerbForm=Fin)&!Mood"
  desc: All finite verb forms should be further categorized using the Mood feature.
  link: http://universaldependencies.org/docs/u/feat/Mood.html

-
  name: Maximum one subject
  expr: "_ >nsubj|>csubj|>nsubjpass|>csubjpass _ >nsubj|>csubj|>nsubjpass|>csubjpass _"
  desc: <b>DEBUGGING TEST. NONZERO HITS DOES NOT MEAN THE DATA IS INVALID.</b> No predicate can have more than one subject. Note that subordinate clauses do not head copulas for this reason.
  link: http://universaldependencies.org/u/dep/nsubj.html

-
  name: Maximum one direct object
  expr: "_ >dobj|>ccomp _ >dobj|>ccomp _"
  desc: <b>DEBUGGING TEST. NONZERO HITS DOES NOT MEAN THE DATA IS INVALID.</b> No predicate can have more than one direct object. Ccomp counts as direct object. (To certain extent xcomp does too, but dobj can co-occur with xcomp in cases of secondary predication, thus this test does not look at xcomp.)
  link: http://universaldependencies.org/u/dep/dobj.html

-
  name: Case not dependent on nmod
  expr: "_ <case (_ (<!nmod&<!nmod:agent&<!conj) _)"
  desc: <b>DEBUGGING TEST. NONZERO HITS DOES NOT MEAN THE DATA IS INVALID.</b> If a word is marked as having a case dependency, its head should usually be marked as being a nominal modifier. But note that several legitimate exceptions occur, in particular, through coordination (where the head is labeled conj instead of nmod) and in nominal clauses (where the head is the main predicate of a clause). Also, in some languages case can modify also objects and other nominals.
  link: http://universaldependencies.org/u/dep/case.html

-
  name: NOUN and case
  expr: NOUN <case _
  expr-pos: _ <case _
  desc: <b>DEBUGGING TEST. NONZERO HITS DOES NOT MEAN THE DATA IS INVALID.</b> A word marked as a NOUN should not be a case dependency.
  link: http://universaldependencies.org/docs/u/dep/case.html

-
  name: Appos chain
  required_empty: true
  expr: "_ <appos (_ <appos _)"
  pos_ex: "Sam , my brother , John 's cousin , arrived\nappos(Sam, brother)\nappos(Sam, cousin)"
  neg_ex: "Sam , my brother , John 's cousin , arrived\nappos(Sam, brother)\nappos(brother, cousin)"
  desc: <b>DEBUGGING TEST. NONZERO HITS DOES NOT MEAN THE DATA IS INVALID.</b> Apposition dependencies should not be chained. Multiple appositions should all be attached to the head, or they should be coordinated (with the first apposition as the head). Legitimate exceptions do occur, however, in the rare case when an apposition has an apposition of its own, which does not apply to head of the first apposition. 
  link: http://universaldependencies.org/u/dep/appos.html

-
  name: Relation advmod used for node that is not ADV
  expr: "(!ADV) <advmod _"
  desc: <b>DEBUGGING TEST. NONZERO HITS DOES NOT MEAN THE DATA IS INVALID.</b> Advmod is intended only for adverbs. Modifiers that are called adverbial in some traditional grammars, but are in fact prepositional or noun phrases, should be attached as nmod.
  link: http://universaldependencies.org/docs/u/dep/advmod.html

-
  name: Heads of an advmod are nominal
  expr: _ <advmod (NOUN|PROPN|NUM|PRON)
  desc: "<b>DEBUGGING TEST. NONZERO HITS DOES NOT MEAN THE DATA IS INVALID.</b> The heads of an adverbial modifier should normally not be nominal (noun, proper noun, numeral, or pronoun). Exceptions occur in nominal clauses, where a nominal is the main predicate and can therefore take clause adverbials. Example: This is probably an exception."
  link: http://universaldependencies.org/docs/u/dep/advmod.html

#Note: in the following test expr is between double quotes because ! has a special meaning in yaml
#      also, because expr is not simple (starting with _), expr-pos is given as a basis of the links
#      that are placed in the table. The first _ is always varied with POS
-
  name: Acl not dependent on NOUN/PROPN/PRON
  expr: "!PRON&!NOUN&!PROPN >acl _"
  expr-pos: _ >acl _
  desc: <b>DEBUGGING TEST. NONZERO HITS DOES NOT MEAN THE DATA IS INVALID.</b> Clausal modifiers of nouns should depend on NOUN/PROPN only; those in the following table depend on other parts of speech.
  link: http://universaldependencies.org/u/dep/acl.html

-
  name: Marked as NUM but not nummod, nmod or compound
  expr: "NUM (<!nummod&<!nmod&<!compound) _"
  expr-pos: "_ (<!nummod&<!nmod&<!compound) _"
  desc: "<b>DEBUGGING TEST. NONZERO HITS DOES NOT MEAN THE DATA IS INVALID.</b> If a word is marked as a numeral (POS), then it should be marked as being a nummod, compound or nmod dependency. Exceptions occur when the numeral is promoted to a higher function through ellipis. Example: Take five!"
  link: http://universaldependencies.org/docs/u/pos/NUM.html

-
  name: Marked as nummod but not NUM
  expr: "!NUM <nummod _"
  expr-pos: _ <nummod _
  desc: <b>DEBUGGING TEST. NONZERO HITS DOES NOT MEAN THE DATA IS INVALID.</b> If a word is marked as a numeric modifier, it should be marked as a numeral (POS).
  link: http://universaldependencies.org/docs/u/dep/nummod.html

-
  name: Marked as AUX but not aux or auxpass
  expr: "AUX (<!aux&<!auxpass) _"
  expr-pos: "_ (<!aux&<!auxpass) _"
  desc: <b>DEBUGGING TEST. NONZERO HITS DOES NOT MEAN THE DATA IS INVALID.</b> If a word is marked as the auxiliary POS, it should be marked as either aux or auxpass dependency.
  link: http://universaldependencies.org/docs/u/pos/AUX_.html

-
  name: Marked as aux or auxpass but not AUX
  expr: "!AUX (<aux|<auxpass) _"
  expr-pos: _ (<aux|<auxpass) _
  desc: <b>DEBUGGING TEST. NONZERO HITS DOES NOT MEAN THE DATA IS INVALID.</b> If a word is marked as a (passive) auxiliary dependency, it should be marked as the auxiliary POS.
  link: http://universaldependencies.org/docs/u/dep/aux_.html

-
  name: Cc is not leaf
  expr: _ < (_ <cc _)
  desc: <b>DEBUGGING TEST. NONZERO HITS DOES NOT MEAN THE DATA IS INVALID.</b> Coordinating conjunction should be attached to the first conjunct and it should not have its own dependents.
  link: http://universaldependencies.org/docs/u/dep/cc.html

-
  name: Parts of speech of expl
  expr: _ <expl _
  desc: <b>DEBUGGING TEST. NONZERO HITS DOES NOT MEAN THE DATA IS INVALID.</b> The parts of speech of words marked as being expletive dependencies.
  link: http://universaldependencies.org/u/dep/expl.html

-
  name: Dependents of expl
  expr: _ < (_ <expl _)
  desc: <b>DEBUGGING TEST. NONZERO HITS DOES NOT MEAN THE DATA IS INVALID.</b> The dependents of a word marked as being an expletive dependency. This should be empty.
  link: http://universaldependencies.org/u/dep/expl.html

-
  name: Heads of expl
  expr: _ >expl _
  desc: <b>DEBUGGING TEST. NONZERO HITS DOES NOT MEAN THE DATA IS INVALID.</b> Parts of speech of words which have an expletive dependency.
  link: http://universaldependencies.org/u/dep/expl.html

-
  name: Heads of xcomp
  expr: _ >xcomp _
  desc: <b>DEBUGGING TEST. NONZERO HITS DOES NOT MEAN THE DATA IS INVALID.</b> Parts of speech of words which have an open clausal complement dependency.
  link: http://universaldependencies.org/u/dep/xcomp.html
